<h1 id="git-">Git 教學</h1>
<p><strong>Q.<code>git clone</code>從遠端下載檔案後，如何下載其分支?</strong></p>
<p>A<code>git fetch origin branch_name:branch_name</code></p>
<p>一般而言在打到<code>git fetch origin</code>按<code>tab</code>就會有提示跑出來</p>
<p><strong>Q.如何修改遠端分支的名稱？</strong></p>
<p>A.本例為遠端上的分支名master改為master-old</p>
<ul>
<li>git push origin master:master-old        # 1</li>
<li>git branch master-old origin/master-old  # 2</li>
<li>git push -f origin     </li>
</ul>
<p>Ref:</p>
<p><a href="http://stackoverflow.com/questions/1526794/how-to-rename-master-branch-in-git"></a><a href="http://stackoverflow.com/questions/1526794/how-to-rename-master-branch-in-git">http://stackoverflow.com/questions/1526794/how-to-rename-master-branch-in-git</a></p>
<p><strong>Q. 合作開發專案時，當有人上傳新的程式碼，但他只放在他的分支，如何讓我的分支也能夠更新與他一模一樣？</strong></p>
<ul>
<li>(假設apple和banana兩人在合作開發quadcopter，我是apple有一個叫appbranch的分支, 想更新和banana的分支banbranch一樣)</li>
</ul>
<p><strong>Ａ：</strong></p>
<p>   git checkout appbranch</p>
<p>   git  pull origin <a href="https://github.com/banana/Qcopter.git"></a><a href="https://git[h](https://git)[ub.com](https://gith)[/](https://github.com)[ba](https://github.com//Qcopter.git)[na](https://github.com/ba/Qcopter.git)[na](https://github.com/bana/Qcopter.git)[/](https://github.com/apple)[Q](https://github.com/apple/)[c](https://github.com/apple/Q)[op](https://github.com/apple/Qc)[ter](https://github.com/apple/Qcop).git[">https://git[h](https://git)[ub.com](https://gith)[/](https://github.com)[ba](https://github.com//Qcopter.git)[na](https://github.com/ba/Qcopter.git)[na](https://github.com/bana/Qcopter.git)[/](https://github.com/apple)[Q](https://github.com/apple/)[c](https://github.com/apple/Q)[op](https://github.com/apple/Qc)[ter](https://github.com/apple/Qcop).git[</a> &quot;banbranch&quot;](<a href="https://github.com/banana/Qcopter.git)（重點在分支要打上">https://github.com/banana/Qcopter.git)（重點在分支要打上</a>&quot;  &quot;）</p>
<p>   git pull後通常都會發生程式衝突，必須要手動修正(ps.可以利用git difftool 來更改程式碼)</p>
<p>   git  pull <a href="https://github.com/banana/Qcopter.git"></a><a href="https://github.com/banana/Qcopter.git"><a href="https://github.com/banana/Qcopter.git">https://github.com/banana/Qcopter.git</a></a><a href="https://github.com/banana/Qcopter.git"> &quot;banbranch&quot;</a>（在一次）</p>
<p>   git commit -a -m&#39;~~~~&#39;   (要打上 -a)</p>
<p>   git push origin appbranch </p>
<ul>
<li>git pull 二次是因為當第二次pull 程式碼就不會有衝突了, 就可以直接打上commit</li>
<li>如果只有一次的話，可能會有一些問題，當你手動更改或許還有些許衝突, 然後這樣子在network graph裡面就看不到你的線連到原作者的路徑了 ,保險一點的方法就是git pull 兩次</li>
<li>origin只有第一次要打 後來就可以不用打</li>
</ul>
<p><strong>Q.我要如何把自己master的程式推到github上面？</strong></p>
<p>A:</p>
<p>   git status  //看你有動過什麼檔案</p>
<p>   git add &quot;modify name&quot; //增加你動過的檔案</p>
<p>   git commit //write your title and record shh key</p>
<p>   tig //確認你的更新有沒歷史紀錄</p>
<p>   git pull //推到你自己的github上</p>
<p>   如果是分支 是打git push origin <code>branchname</code></p>
<p>   pull 是代表你要中端機的code更新跟github一樣</p>
<p>  例如你抓別人的code 別人更新了 你只要在他資料夾打git pull 就更新跟</p>
<p>  他一樣了  </p>
<p><strong>Q.git pull什麼時候需要加網址？</strong></p>
<p>A:  當你是fork別人的專案,然後當初git clone 自己網址才要加網址</p>
<pre><code> 如果你是git clone 別人網址 沒fork 只要打git pull</code></pre>
<p><strong>Q.我想回到之前的commit？</strong></p>
<p>A. </p>
<ol>
<li>在github的commit看想回到哪裡， commit裡面有 SSH key 把它複製下來.（假設SSH key為4bc3e5c572d86f1aebd5dce53a4bec2c0c090209）</li>
<li><p>git reset --hard 4bc3e5c572d86f1aebd5dce53a4bec2c0c090209</p>
</li>
<li><p>它會顯示  HEAD is now at 4bc3e5c &quot;你的commit名稱&quot;</p>
</li>
<li><p>用tig 看是否已跳回去。</p>
</li>
</ol>

